//
//  File.swift
//  
//
//  Created by Carlos Eduardo Cancino-Chac√≥n on 17.10.21.
//

import Foundation
import XCTest
@testable import SwiftAlignmentToolbox
import Accelerate
import Surge

final class FiltersTest: XCTestCase {
    func testMatrixMultiplication() {
        // Test syntax of matrix multiplication ;)
        let A: Matrix<Float> = Matrix([[ 0.27217477,  0.12492261,  1.06529937, -0.63875802, -0.02129646,
                                               0.99619816, -1.69235599],
                                             [-0.52280134, -0.27248153,  3.20012132,  1.71110811, -0.99587174,
                                               1.23411995,  1.62025191],
                                             [ 1.3223502 , -0.75191014,  1.26392185, -0.56491519,  0.38838714,
                                               0.23962788,  1.81200872],
                                             [ 1.64195587,  0.69532439, -0.4392968 ,  1.32353315, -0.55514562,
                                              -2.46498623, -0.33151739],
                                             [-1.08453753, -0.58731954, -0.84796682, -0.33090001, -1.82647565,
                                              -1.06227839,  0.16035039],
                                             [ 0.91852009,  0.45562431,  0.82387345,  0.05950231,  0.70404777,
                                              -2.17403183, -0.15860331],
                                             [-0.26410587,  1.28775062,  2.00447789, -1.31962226, -0.71312326,
                                              -0.14548524,  1.5169626 ],
                                             [ 0.02881027, -0.83807811, -0.05262508,  1.26252458, -1.57619413,
                                               1.31269072,  1.27983542],
                                             [ 0.7352522 ,  0.45634971, -0.05946506, -0.47098628,  0.29479483,
                                               1.51652622, -0.45769993],
                                             [ 0.99978071, -0.22274266,  0.63943866,  1.92216504,  0.17088264,
                                               2.14682479,  1.98561634]])
        let B: Matrix<Float> = Matrix([[ 0.10610803,  0.36643902, -0.03093614],
                                             [ 0.39319553,  0.36500024,  1.05817266],
                                             [ 1.52542844,  1.4337636 , -0.4280079 ],
                                             [-1.05136852, -1.38143686, -0.26243861],
                                             [-1.45202815,  0.21501221, -0.31109055],
                                             [-0.84965656, -2.26482605,  0.31981308],
                                             [ 0.81940947,  0.41526774, -0.95444824]])
        let pythonMatMul: Matrix<Float> = Matrix([[ 0.17237119, -0.40845183,  1.77593639],
                                                  [ 4.64504438, -0.40295422, -2.93284967],
                                                  [ 3.0838473 ,  3.09593442, -3.0029281 ],
                                                  [ 1.01481653,  3.7229785 ,  0.2264357 ],
                                                  [ 2.39443408,  0.70929441, -0.06273399],
                                                  [ 2.16573512,  6.61124561, -0.67745409],
                                                  [ 7.32551196,  5.87628704, -0.41332406],
                                                  [ 0.48792526, -4.89533417, -1.50791577],
                                                  [-1.42969921, -2.5599798 ,  1.43935533],
                                                  [-1.47213989, -5.45436865, -2.30651002]])
        let C: Matrix<Float> = A * B
        
        for i in 0..<pythonMatMul.rows {
            for j in 0..<pythonMatMul.columns {
                XCTAssertEqual(C[i, j], pythonMatMul[i, j], accuracy: 1e-6)
            }
        }
        
    }
}
